;
;REM	ELITE <G1>  Joint
;
;            Code for plotbank
;
;	Plot, Planet, Sun, Explosions, Hall, Dust Ptcls


;	IF	ROMCODE
;	ORG	$0005
;	ENDIF


	FORG	BANKSTART


	INCBIN	ALLSHIPS.DAT

	; Ships at &8000
	;


SHPPT
;	JSR	EE51	; Ship is a point
	JSR	PROJ	; Project coords to K3,K4
	ORA	K3+1
	BNE	nono
	LDY	K4
	CPY	#Yabs*2-2
	BCS	nono	; Check on screen
	JSR	Shpt
;	LDY	K4
	INY
	CLC
	JSR	Shpt	; Draw two short horiz lines
	BIT	XX1+31	; Is ship shooting?
	BVC	!1
	LDA	XX1+31
	AND	#$BF
	STA	XX1+31	; clear bit
	LDX	#1
	LDA	XX1+6
	BPL	!2
	LDX	#$FF
!2	STX	X2
	AND	#63
	ADC	#32
	STA	Y2
	JSR	LOIN




!1
;	LDA	#8
;	ORA	XX1+31
;	STA	XX1+31
nono	LDA	#$F7
	AND	XX1+31
	STA	XX1+31
	RTS

Shpt
;	TAY
	LDA	K3
	STA	X1
	ADC	#3
	BCS	nonom2
	STA	X2
	STY	Y1
	STY	Y2

	JMP	LOIN	; Why no use HLOIN? IB 19/11/90
			; Because HLOIN now EORS! IB 28/9/91


nonom2	PLA
	PLA
	JMP	nono



;	STA	Y1
;	STA	Y2
;	LDA	K3
;	STA	X1
;	ADC	#3
;	BCS	nonom2
;	STA	X2
;	JSR	LL30
;	rts



LL38			;BADD(S)A=R+Q(SA)
	EOR	S
	BMI	LL39
	LDA	Q
	CLC
	ADC	R
	RTS
LL39	LDA	R
	SEC
	SBC	Q
	BCC	LL40
	CLC
	RTS
LL40	PHA
	LDA	S
	EOR	#128
	STA	S
	PLA
	EOR	#255
	ADC	#1
	RTS
LL51			;XX12=XX15.XX16 (MATMULT)
	POLLBIT	5
	LDX	#0
	LDY	#0
ll51_LC	LDA	XX15
	STA	Q
	LDA	XX16,X
	JSR	FMLTU
	STA	T
	LDA	XX15+1
	EOR	XX16+1,X
	STA	S
	LDA	XX15+2
	STA	Q
	LDA	XX16+2,X
	JSR	FMLTU
	STA	Q
	LDA	T
	STA	R
	LDA	XX15+3
	EOR	XX16+3,X
	JSR	LL38
	STA	T
	LDA	XX15+4
	STA	Q
	LDA	XX16+4,X
	JSR	FMLTU
	STA	Q
	LDA	T
	STA	R
	LDA	XX15+5
	EOR	XX16+5,X
	JSR	LL38
	STA	XX12,Y

	POLLBIT	6

	LDA	S
	STA	XX12+1,Y
	INY
	INY
	TXA
	CLC
	ADC	#6
	TAX
	CMP	#17
	BCC	ll51_LC
	RTS

LL45	JMP	PLANET


LL9true	;ENTRY


	POLLBIT	7

	LDA	TYPE
	BMI	LL45

	LDA	#31
	STA	XX4
	LDA	NEWB
	BMI	EE51
	LDA	#32
	BIT	XX1+31
	BNE	EE28
	BPL	EE28

	; Initiate explosion


	ORA	XX1+31
	AND	#$3F
	STA	XX1+31
	LDA	#0
	LDY	#28
	STA	(INF),Y
	LDY	#30
	STA	(INF),Y		;Kill spin and accn

	JSR	FREESCAN2true	;Free scanner sprite


;	JSR	EE51
;	LDY	#1
	LDA	#18
	STA	EXCN	; Set count=18
;	STA	(XX19),Y
;	LDY	#7
;	LDA	(XX0),Y
;	LDY	#2
;	STA	(XX19),Y

	LDY	#EXSDoff
	JSR	DORND
	STA	(INF),Y
	INY
	JSR	DORND
	STA	(INF),Y
	INY
	JSR	DORND
	STA	(INF),Y
	INY
	JSR	DORND
	STA	(INF),Y

	POLLBIT	105

EE28
	LDA	XX1+8
EE49	BPL	LL10

LL14	; Don't bother drawing ship

	LDA	XX1+31
	AND	#32
	BEQ	EE51
	LDA	XX1+31
	AND	#$F7
	STA	XX1+31
	JMP	DOEXP

EE51	LDA	INWK+31	; Clear shooting and drawn bits
	AND	#$B7
	STA	INWK+31	
	RTS
LL10
	LDA	XX1+7
	CMP	#$C0
	BCS	LL14
	LDA	XX1
	CMP	XX1+6
	LDA	XX1+1
	SBC	XX1+7
	BCS	LL14
	LDA	XX1+3
	CMP	XX1+6
	LDA	XX1+4
	SBC	XX1+7
	BCS	LL14
	LDY	#6
	LDA	(XX0),Y
	TAX
	LDA	#255
	STA	XX3,X
	STA	XX3+1,X
	LDA	XX1+6
	STA	T
	LDA	XX1+7
	LSR	A
	ROR	T
	LSR	A
	ROR	T
	LSR	A
	ROR	T
	LSR	A
	BNE	LL13
	LDA	T
	ROR	A
	LSR	A
	LSR	A
	LSR	A
	STA	XX4
	BPL	LL17
LL13	LDY	#13
	LDA	(XX0),Y
	CMP	XX1+7
	BCS	LL17
	LDA	#32
	AND	XX1+31
	BNE	LL17
	JMP	SHPPT
LL17

	LDX	#5
LL15	LDA	XX1+21,X
	STA	XX16,X
	LDA	XX1+15,X
	STA	XX16+6,X
	LDA	XX1+9,X
	STA	XX16+12,X
	DEX
	BPL	LL15
	LDA	#197	;NORM
	STA	Q
	LDY	#16
LL21	POLLBIT	8		;Normalise vectors
	LDA	XX16,Y
	ASL	A
	LDA	XX16+1,Y
	ROL	A
	JSR	LL28	;Divide
	LDX	R
	STX	XX16,Y
	DEY
	DEY
	BPL	LL21
	LDX	#8
ll91_LC	LDA	XX1,X
	STA	XX18,X
	DEX
	BPL	ll91_LC
	LDA	#255
	STA	XX2+15
	LDY	#12
	LDA	XX1+31
	AND	#32
	BEQ	EE29
	LDA	(XX0),Y
	LSR	A
	LSR	A
	TAX
	LDA	#FF
EE30	STA	XX2,X
	DEX
	BPL	EE30
	INX
	STX	XX4
LL41	JMP	LL42	;No Norms

EE29	LDA	(XX0),Y
	BEQ	LL41
	STA	XX20
	;DtProd^XX2
	LDY	#18
	LDA	(XX0),Y
	TAX
	LDA	XX18+7
LL90	TAY
	BEQ	LL91
	INX
	LSR	XX18+4
	ROR	XX18+3
	LSR	XX18+1
	ROR	XX18
	LSR	A
	ROR	XX18+6
	TAY
	BNE	LL90+3
LL91	STX	XX17		;Transpose matrix for normals
	LDA	XX18+8
	STA	XX15+5
	LDA	XX18
	STA	XX15
	LDA	XX18+2
	STA	XX15+1
	LDA	XX18+3
	STA	XX15+2
	LDA	XX18+5
	STA	XX15+3
	LDA	XX18+6
	STA	XX15+4
	JSR	LL51
	LDA	XX12
	STA	XX18
	LDA	XX12+1
	STA	XX18+2
	LDA	XX12+2
	STA	XX18+3
	LDA	XX12+3
	STA	XX18+5
	LDA	XX12+4
	STA	XX18+6
	LDA	XX12+5
	STA	XX18+8
	LDY	#4
	LDA	(XX0),Y
	CLC
	ADC	XX0
	STA	V
	LDY	#17
	LDA	(XX0),Y
	ADC	XX0+1
	STA	V+1
	LDY	#0

LL86	POLLBIT	9			;Start of normals loop
	LDA	(V),Y
	STA	XX12+1
	AND	#31
	CMP	XX4
	BCS	LL87
	TYA
	LSR	A
	LSR	A
	TAX
	LDA	#255
	STA	XX2,X
	TYA
	ADC	#4
	TAY
	JMP	LL88	;Normal not visible
LL87	LDA	XX12+1
	ASL	A
	STA	XX12+3
	ASL	A
	STA	XX12+5
	INY
	LDA	(V),Y
	STA	XX12
	INY
	LDA	(V),Y
	STA	XX12+2
	INY
	LDA	(V),Y
	STA	XX12+4
	LDX	XX17
	CPX	#4
	BCC	LL92
LL143
	;Fce	ofst<<PV
	LDA	XX18
	STA	XX15
	LDA	XX18+2
	STA	XX15+1
	LDA	XX18+3
	STA	XX15+2
	LDA	XX18+5
	STA	XX15+3
	LDA	XX18+6
	STA	XX15+4
	LDA	XX18+8
	STA	XX15+5
	JMP	LL89
ovflw	POLLBIT	10

	LSR	XX18
	LSR	XX18+6
	LSR	XX18+3
	LDX	#1
LL92	LDA	XX12
	STA	XX15
	LDA	XX12+2
	STA	XX15+2
	LDA	XX12+4
LL93	DEX
	BMI	LL94
	LSR	XX15
	LSR	XX15+2
	LSR	A
	DEX
	BPL	LL93+3
LL94	STA	R
	LDA	XX12+5
	STA	S
	LDA	XX18+6
	STA	Q
	LDA	XX18+8
	JSR	LL38		;add view vector?
	BCS	ovflw
	STA	XX15+4
	LDA	S
	STA	XX15+5
	LDA	XX15
	STA	R
	LDA	XX12+1
	STA	S
	LDA	XX18
	STA	Q
	LDA	XX18+2
	JSR	LL38		;add in offset
	BCS	ovflw
	STA	XX15
	LDA	S
	STA	XX15+1
	LDA	XX15+2
	STA	R
	LDA	XX12+3
	STA	S
	LDA	XX18+3
	STA	Q
	LDA	XX18+5
	JSR	LL38
	BCS	ovflw
	STA	XX15+2
	LDA	S
	STA	XX15+3
LL89	LDA	XX12
	STA	Q

	POLLBIT	11

	LDA	XX15
	JSR	FMLTU
	STA	T
	LDA	XX12+1
	EOR	XX15+1
	STA	S
	LDA	XX12+2
	STA	Q
	LDA	XX15+2
	JSR	FMLTU		;DOT PRODUCT?
	STA	Q
	LDA	T
	STA	R
	LDA	XX12+3
	EOR	XX15+3
	JSR	LL38
	STA	T
	LDA	XX12+4
	STA	Q
	LDA	XX15+4
	JSR	FMLTU
	STA	Q
	LDA	T
	STA	R
	LDA	XX15+5
	EOR	XX12+5
	JSR	LL38
	PHA
	TYA
	LSR	A
	LSR	A
	TAX
	PLA
	BIT	S
	BMI	*+4	;!! was P%
	LDA	#0
	STA	XX2,X
	INY
LL88	CPY	XX20
	BCS	LL42
	JMP	LL86		;End of Normals loop
LL42	;ndeX-Ycrds
	;TrnspMat


	LDY	XX16+2
	LDX	XX16+3
	LDA	XX16+6
	STA	XX16+2
	LDA	XX16+7
	STA	XX16+3
	STY	XX16+6
	STX	XX16+7
	LDY	XX16+4
	LDX	XX16+5
	LDA	XX16+12
	STA	XX16+4
	LDA	XX16+13
	STA	XX16+5
	STY	XX16+12
	STX	XX16+13
	LDY	XX16+10
	LDX	XX16+11
	LDA	XX16+14
	STA	XX16+10
	LDA	XX16+15
	STA	XX16+11
	STY	XX16+14
	STX	XX16+15
	LDY	#8
	LDA	(XX0),Y
	STA	XX20
	LDA	XX0
	CLC
	ADC	#20
	STA	V
	LDA	XX0+1
	ADC	#0
	STA	V+1
	LDY	#0
	STY	CNT

LL48	POLLBIT	12
	STY	XX17		;Start of Nodes loop
	LDA	(V),Y
	STA	XX15
	INY
	LDA	(V),Y
	STA	XX15+2
	INY
	LDA	(V),Y
	STA	XX15+4
	INY
	LDA	(V),Y
	STA	T
	AND	#31
	CMP	XX4
	BCC	LL49m3
	INY
	LDA	(V),Y
	STA	P
	AND	#15
	TAX
	LDA	XX2,X
	BNE	LL49
	LDA	P
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	TAX
	LDA	XX2,X
	BNE	LL49
	INY
	LDA	(V),Y
	STA	P
	AND	#15
	TAX
	LDA	XX2,X
	BNE	LL49
	LDA	P
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	TAX
	LDA	XX2,X
	BNE	LL49
LL49m3	JMP	LL50
LL49	LDA	T
	STA	XX15+1
	ASL	A
	STA	XX15+3
	ASL	A
	STA	XX15+5
	JSR	LL51		;matmult call
	LDA	XX1+2
	STA	XX15+2
	EOR	XX12+1
	BMI	LL52
	CLC
	LDA	XX12
	ADC	XX1
	STA	XX15
	LDA	XX1+1
	ADC	#0
	STA	XX15+1
	JMP	LL53
LL52	LDA	XX1
	SEC
	SBC	XX12
	STA	XX15
	LDA	XX1+1
	SBC	#0
	STA	XX15+1
	BCS	LL53
	EOR	#FF
	STA	XX15+1
	LDA	#1
	SBC	XX15
	STA	XX15
	BCC	*+4	;!! was P%
	INC	XX15+1
	LDA	XX15+2
	EOR	#128
	STA	XX15+2
LL53	LDA	XX1+5
	STA	XX15+5
	EOR	XX12+3
	BMI	LL54
	CLC
	LDA	XX12+2
	ADC	XX1+3
	STA	XX15+3
	LDA	XX1+4
	ADC	#0
	STA	XX15+4
	JMP	LL55
LL54	LDA	XX1+3
	SEC
	SBC	XX12+2
	STA	XX15+3
	LDA	XX1+4
	SBC	#0
	STA	XX15+4
	BCS	LL55
	EOR	#255
	STA	XX15+4
	LDA	XX15+3
	EOR	#255
	ADC	#1
	STA	XX15+3
	LDA	XX15+5
	EOR	#128
	STA	XX15+5
	BCC	LL55
	INC	XX15+4
LL55	LDA	XX12+5
	BMI	LL56
	LDA	XX12+4
	CLC
	ADC	XX1+6
	STA	T
	LDA	XX1+7
	ADC	#0
	STA	U
	JMP	LL57

LL61	LDX	Q
	BEQ	LL84
	LDX	#0
LL63	LSR	A
	INX
	CMP	Q
	BCS	LL63
	STX	S
	JSR	LL28	;PROJECT?
	LDX	S
	LDA	R
LL64	ASL	A
	ROL	U
	BMI	LL84
	DEX
	BNE	LL64
	STA	R
	RTS

LL84	LDA	#50
	STA	R
	STA	U
	RTS
LL62	LDA	#128
	SEC
	SBC	R
	STA	XX3,X
	INX
	LDA	#0
	SBC	U
	STA	XX3,X
	JMP	LL66
LL56	LDA	XX1+6
	SEC
	SBC	XX12+4
	STA	T
	LDA	XX1+7
	SBC	#0
	STA	U
	BCC	LL140
	BNE	LL57
	LDA	T
	CMP	#4
	BCS	LL57
LL140	LDA	#0
	STA	U
	LDA	#4
	STA	T
LL57	LDA	U
	ORA	XX15+1
	ORA	XX15+4
	BEQ	LL60
	LSR	XX15+1
	ROR	XX15
	LSR	XX15+4
	ROR	XX15+3
	LSR	U
	ROR	T
	JMP	LL57
LL60	LDA	T
	STA	Q
	LDA	XX15
	CMP	Q
	BCC	LL69
	JSR	LL61
	JMP	LL69p3
LL69	JSR	LL28		;project X coord
LL69p3	LDX	CNT

	POLLBIT	13

	LDA	XX15+2
	BMI	LL62
	LDA	R
	CLC
	ADC	#128
	STA	XX3,X
	INX
	LDA	U
	ADC	#0
	STA	XX3,X
LL66	TXA
	PHA
	LDA	#0
	STA	U
	LDA	T
	STA	Q
	LDA	XX15+3
	CMP	Q
	BCC	LL67
	JSR	LL61
	JMP	LL68
LL70	LDA	Ymem
	CLC
	ADC	R
	STA	XX3,X
	INX
	LDA	#0
	ADC	U
	STA	XX3,X
	JMP	LL50
LL67	JSR	LL28		;project Y coord
LL68	PLA
	TAX
	INX
	LDA	XX15+5
	BMI	LL70
	LDA	Ymem
	SEC
	SBC	R
	STA	XX3,X
	INX
	LDA	#0
	SBC	U
	STA	XX3,X
LL50	CLC
	LDA	CNT
	ADC	#4
	STA	CNT
	LDA	XX17
	ADC	#6
	TAY
	BCS	LL72
	CMP	XX20
	BCS	LL72
	JMP	LL48		;End of Nodes loop

LL72	LDA	XX1+31
	AND	#32
	BEQ	EE31
	LDA	XX1+31
	ORA	#8
	STA	XX1+31
	JMP	DOEXP
EE31
	LDA	#8
	BIT	XX1+31
	BEQ	LL74
	;JSRLL155	##
	LDA	#8
LL74	ORA	XX1+31
	STA	XX1+31
	LDY	#9
	LDA	(XX0),Y
	STA	XX20
	LDY	#0
	STY	U
	STY	XX17
	INC	U
	BIT	XX1+31	; Is ship shooting?
	BVC	LL170
	LDA	XX1+31
	AND	#$BF
	STA	XX1+31	; clear bit
	LDY	#6
	LDA	(XX0),Y
	TAY
	LDX	XX3,Y
	STX	XX15
	INX
	BEQ	LL170	;line not visible
	LDX	XX3+1,Y
	STX	XX15+1
	INX
	BEQ	LL170
	LDX	XX3+2,Y
	STX	XX15+2
	LDX	XX3+3,Y
	STX	XX15+3
	LDA	#0
	STA	XX15+4
	STA	XX15+5
	STA	XX12+1
	LDA	XX1+6
	STA	XX12
	LDA	XX1+2
	BPL	*+4	;!! was P%
	DEC	XX15+4
	JSR	LL145	; Clip
	BCS	LL170
	LDY	U
	;LDAXX15;STA(XX19),Y;INY;LDAXX15+1;STA(XX19),Y;INY;LDAXX15+2;STA(XX19),Y;INY;LDAXX15+3;STA(XX19),Y;INY;STYU;.LL170	##
	JSR	LOIN	 ;##
LL170	;nw lns
	LDY	#3
	CLC
	LDA	(XX0),Y
	ADC	XX0
	STA	V
	LDY	#16
	LDA	(XX0),Y
	ADC	XX0+1
	STA	V+1
	LDY	#5
	LDA	(XX0),Y
	STA	T1
	LDY	XX17
LL75	POLLBIT	14
	LDA	(V),Y		;Start of Nodes-walk
	CMP	XX4
	BCC	LL79-3
	INY
	LDA	(V),Y
	INY
	STA	P
	AND	#15
	TAX
	LDA	XX2,X
	BNE	LL79
	LDA	P
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	TAX
	LDA	XX2,X
	BNE	LL79
	JMP	LL78
LL79	LDA	(V),Y
	TAX
	INY
	LDA	(V),Y
	STA	Q
	LDA	XX3+1,X
	STA	XX15+1
	LDA	XX3,X
	STA	XX15
	LDA	XX3+2,X
	STA	XX15+2
	LDA	XX3+3,X
	STA	XX15+3
	LDX	Q
	LDA	XX3,X
	STA	XX15+4
	LDA	XX3+3,X
	STA	XX12+1
	LDA	XX3+2,X
	STA	XX12
	LDA	XX3+1,X
	STA	XX15+5
	JSR	LL147
	BCS	LL79-3
	;JMPLL80	##
	JSR		LOIN
	JMP		LL78

; Clip called with 	X1=(XX15  ,XX15+1)	Y1=(XX15+2,XX15+3)
;		X2=(XX15+4,XX15+5)	Y2=(XX12  ,XX12+1)

; Clip returns	X1,X2,Y1,Y2 = XX15...XX15+3  C=0
;		or C=1 if whole line off screen

LL145
;	POLLBIT	15
	LDA	#0		; Clip
	STA	SWAP
	LDA	XX15+5
LL147

;	BIT	dont		;is this flag used anywhere?
;	BMI	LL146		; NO! -ian

	LDX	#FF
	ORA	XX12+1
	BNE	LL107
	LDA	Yx2M1		;** used to rely on Y*2-1>127
	CMP	XX12
	BCC	LL107
	LDX	#0
LL107	STX	XX13		;X2,Y2 on screen if XX13=0
	LDA	XX15+1		; check for X1,Y1
	ORA	XX15+3
	BNE	LL83
	LDA	Yx2M1
	CMP	XX15+2
	BCC	LL83		;
	LDA	XX13
	BNE	LL109p2

LL146
	LDA	XX15+2		;no clipping (whole line on)
	STA	XX15+1
	LDA	XX15+4
	STA	XX15+2
	LDA	XX12
	STA	XX15+3
	CLC
	RTS

LL109	SEC			;exit point for whole line off
	RTS

LL109p2	LSR	XX13


; line is off screen	XX13=127 => X1,Y1 on  X2,Y2 off
;		XX13=255 => X1,Y1 off X2,Y2 off
;		XX13=0   => X1,Y1 off X2,Y2 on

LL83
;	POLLBIT	16
	; X1,Y1 is offscreen
	LDA	XX13
	BPL	LL115
	; Now know both are off
	LDA	XX15+1		;test if line cuts screen
	AND	XX15+5
	BMI	LL109		;X1H & X2H<0=>off
	LDA	XX15+3
	AND	XX12+1
	BMI	LL109		;Y1H & Y2H<0=>off
	LDX	XX15+1
	DEX
	TXA
	LDX	XX15+5
	DEX
	STX	XX12+2		;XX12+1=X2H-1
	ORA	XX12+2
	BPL	LL109		;X1H & X2H both in [1,128]=>off 
	LDA	XX15+2
	CMP	Yx2
	LDA	XX15+3
	SBC	#0
	STA	XX12+2
	LDA	XX12
	CMP	Yx2
	LDA	XX12+1
	SBC	#0
	ORA	XX12+2
	BPL	LL109		;Y1-2Y>0 & Y2-2Y>0=>off

LL115	TYA			;Line does cut screen
	PHA			; (preserve Y over clip)
	LDA	XX15+4
	SEC
	SBC	XX15
	STA	XX12+2
	LDA	XX15+5
	SBC	XX15+1
	STA	XX12+3		;DX=XX12+2=X2-X1

	LDA	XX12
	SEC
	SBC	XX15+2
	STA	XX12+4
	LDA	XX12+1
	SBC	XX15+3
	STA	XX12+5		;DY=XX12+4=Y2-Y1

	EOR	XX12+3
	STA	S		;S=Sign of DX*DY

	LDA	XX12+5
	BPL	!110
	LDA	#0
	SEC
	SBC	XX12+4
	STA	XX12+4
	LDA	#0
	SBC	XX12+5
	STA	XX12+5		;XX12+4=ABS(DY)

!110	LDA	XX12+3
	BPL	LL111
	SEC
	LDA	#0
	SBC	XX12+2
	STA	XX12+2
	LDA	#0
	SBC	XX12+3		;A,XX12+2=ABS(DX)
	;GETgrad
LL111	TAX
	BNE	LL112		;Shift both down till
	LDX	XX12+5		;both one byte
	BEQ	LL113
LL112	LSR	A
	ROR	XX12+2
	LSR	XX12+5
	ROR	XX12+4
	JMP	LL111

LL113	STX	T		;T=0
	LDA	XX12+2
	CMP	XX12+4
	BCC	LL114
	; Know DX>=DY
	STA	Q
	LDA	XX12+4
	JSR	LL28		;Use Y/X grad.
	JMP	LL116

LL114	; Know DX<DY
	LDA	XX12+4
	STA	Q
	LDA	XX12+2
	JSR	LL28		;Use X/Y grad
	DEC	T		;T=FF

LL116
	STA	XX12+2
	POLLBIT	17
	LDA	S
	STA	XX12+3		;XX12=SR=Gradient (S=sign only)
	LDA	XX13
	BEQ	!1	;!! was P%+4
	BPL	LLX117		; If XX13=0 or 255
!1	JSR	LL118		;clip X1,Y1

	LDA	XX13		;then exit CLIP if
;	BPL	LL124		;XX13=0
	BMI	LL117
	PLA
	TAY
	JMP	LL146	



LL117	; Know XX13=255 or 127 so X2,Y2 is off
	LDA	XX15+1
	ORA	XX15+3
	BNE	LL137
	LDA	XX15+2
	CMP	Yx2
	BCS	LL137		; If X1',Y1' still off then exit

LLX117	LDX	XX15
	LDA	XX15+4
	STA	XX15
	STX	XX15+4
	LDA	XX15+5
	LDX	XX15+1
	STX	XX15+5
	STA	XX15+1
	LDX	XX15+2
	LDA	XX12
	STA	XX15+2
	STX	XX12
	LDA	XX12+1
	LDX	XX15+3
	STX	XX12+1
	STA	XX15+3		; Swap X1,Y1 <-> X2,Y2

	JSR	LL118		; clip new X1,Y1 (ie. X2,Y2)

	LDA	XX15+1		; (Fix for the DREAD CLIP BUG
	ORA	XX15+3		; which was due to rounding errors
	BNE	LL137		; crossing the corner of the screen)

	DEC	SWAP		; flag swap and...
;LL124
	PLA
	TAY

	LDA	XX15+2		; assume whole line on.
	CMP	Yx2		;  Further fix of dread clip bug
	BCS	!1		; -may not be necessary but if
!2	STA	XX15+1		; error occurs on Yhigh then
	LDA	XX15+4		; workspace following fake video
	STA	XX15+2		; ram could be garbled
	LDA	XX12
	STA	XX15+3
	CLC
	RTS


!1	LDA	Yx2m1
	BNE	!2




LL137	PLA
	TAY
	SEC
	RTS

;LL80	LDY	U		;no longer need to put in linestore
;	LDA	XX15
;	STA	(XX19),Y
;	INY
;	LDA	XX15+1
;	STA	(XX19),Y
;	INY
;	LDA	XX15+2
;	STA	(XX19),Y
;	INY
;	LDA	XX15+3
;	STA	(XX19),Y
;	INY
;	STY	U
;	CPY	T1
;	BCS	LL81

LL78	INC	XX17
	LDY	XX17
	CPY	XX20
	BCS	LL81
	LDY	#0
	LDA	V
	ADC	#4
	STA	V
	BCC	ll81_LC
	INC	V+1
ll81_LC	JMP	LL75		;End of node-walk loop
LL81	LDA	U
LL81p2
;	LDY	#0
;	STA	(XX19),Y
LL155
	;	CLEAR LINEstr
;	LDY	#0
;	LDA	(XX19),Y
;	STA	XX20
;	CMP	#4
;	BCC	LL82
;	INY
;LL27	LDA	(XX19),Y
;	STA	XX15
;	INY
;	LDA	(XX19),Y
;	STA	XX15+1
;	INY
;	LDA	(XX19),Y
;	STA	XX15+2
;	INY
;	LDA	(XX19),Y
;	STA	XX15+3
;	JSR	LL30
;	INY
;	CPY	XX20
;	BCC	LL27
LL82	RTS

LL118	 ;move XX15,XX15+2 to scrn-gradient in XX12+2

	POLLBIT	226
	LDA	XX15+1
	STA	S
	BPL	LL119
;	STA	S
	JSR	LL120	;If X1<0 
	TXA
	CLC
	ADC	XX15+2
	STA	XX15+2
	TYA
	ADC	XX15+3
	STA	XX15+3	;Y1'=Y1-XX15*Gradient
	LDA	#0
	STA	XX15
	STA	XX15+1	;X1'=0000
	TAX
	BEQ	DUNXCLIP

LL119	BEQ	LL134
;	STA	S
	DEC	S
	JSR	LL120	;If X1>FF
	TXA
	CLC
	ADC	XX15+2
	STA	XX15+2
	TYA
	ADC	XX15+3
	STA	XX15+3	;Y1'=Y1-X1*Gradient
	LDX	#FF
	STX	XX15
	INX
	STX	XX15+1	;X1'=00FF

DUNXCLIP	POLLBIT	237


LL134	; Now consider clipping on Y
	LDA	XX15+3
	BPL	LL135
	STA	S
	LDA	XX15+2
	STA	R	;If Y1<0
	JSR	LL123
	TXA
	CLC
	ADC	XX15
	STA	XX15
	TYA
	ADC	XX15+1
	STA	XX15+1	;X1'=X1-Y1/Gradient
	LDA	#0
	STA	XX15+2
	STA	XX15+3	;Y1'=0000
LL135	;BNELL139
	LDA	XX15+2
	SEC
	SBC	Yx2
	STA	R	;If Y1>=2Y
	LDA	XX15+3
	SBC	#0
	STA	S
	BCC	LL136


LL139	JSR	LL123
	TXA
	CLC
	ADC	XX15
	STA	XX15
	TYA
	ADC	XX15+1
	STA	XX15+1	;X1'=X1+Y1/Gradient
	LDA	Yx2M1
	STA	XX15+2
	LDA	#0
	STA	XX15+3	;Y1'=2Y-1
LL136	POLLBIT	230
	RTS

LL120	;YX=-S,XX15*Gradient/256
	LDA	XX15
	STA	R
	;.LL120
	JSR	LL129	;A,Q=Grad*SGN(S), SR=ABS(S,XX15)	
	PHA
	LDX	T	; (if T=FF then DX<DY)
	BNE	LL121

LL122	; YX=SR*Q
	LDA	#0
	TAX
	TAY
	LSR	S
	ROR	R
	ASL	Q
	BCC	LL126
LL125	TXA
	CLC
	ADC	R
	TAX
	TYA
	ADC	S
	TAY
LL126	LSR	S
	ROR	R
	ASL	Q
	BCS	LL125
	BNE	LL126	;YX=Q*SR
	PLA
	BPL	LL133
	RTS

LL123	;	YX=SR*256/Grad (M=grad.)
	JSR	LL129
	PHA
	LDX	T
	BNE	LL122

LL121	;YX=SR/Q 	; ll28

;	LDA	R
;	CMP	Q
;	BCC	!1
;	
;	LDX	#FF	; another failed
;	LDY	S	; fix of the dread
;	RTS		; clip bug



!1	LDA	#255
	TAY
	ASL	A
	TAX		;YX=FFFE
!130	ASL	R
	ROL	S
	LDA	S
	BCS	!131
	CMP	Q
	BCC	!132
!131	SBC	Q
	STA	S
	LDA	R
	SBC	#0
	STA	R
	SEC
!132	TXA
	ROL	A
	TAX
	TYA
	ROL	A
	TAY
	BCS	!130
	PLA
	BMI	LL128
LL133	; Negate YX
	TXA
	EOR	#FF
	;CLC	;	this looks okay
	ADC	#1
	TAX
	TYA
	EOR	#FF
	ADC	#0
	TAY
LL128	RTS

LL129	;A,Q= Grad * SGN(SR); SR=ABS(SR)
	LDX	XX12+2
	STX	Q
	LDA	S
	BPL	LL127

	LDA	#0
	SEC
	SBC	R
	STA	R

;	LDA	R
;	EOR	#FF
;	CLC
;	ADC	#1	; tried this instead
;	STA	R	; but to no avail



	LDA	S
	PHA
	EOR	#255
	ADC	#0
	STA	S
	PLA
LL127	EOR	XX12+3
	RTS



EX2	LDA	INWK+31	; End explosion
	ORA	#$A0
	STA	INWK+31
TT482	JMP	WPEXPL

exlook	EQUB	0
	EQUB	2

DOEXP
	POLLBIT	18

	LDA	INWK+6
	STA	T
	LDA	INWK+7
	CMP	#$20
	BCC	!2	;!! was P%
	LDA	#$FE
	BNE	!3
!2	ASL	T
	ROL	A
	ASL	T
	ROL	A
	SEC
	ROL	A
!3	STA	Q
	LDA	EXCN
	ADC	#4
	BCS	EX2
	STA	EXCN
	JSR	DVID4

	POLLBIT	19

	LDA	P
	CMP	#$1C
	BCC	!5	;!! was P%
	LDA	#$FE
	BNE	!4
!5	ASL	R
	ROL	A
	ASL	R
	ROL	A
	ASL	R
	ROL	A
!4
	STA	EXSC
	LDA	INWK+31
	AND	#$BF
	STA	INWK+31
	AND	#8
	BEQ	TT482


;	LDA	INWK+31
;	ORA	#64
;	STA	INWK+31

	LDA	INWK+7
	BEQ	PTCLS
	LDY	EXCN	; Use sprites if expl
	CPY	#24	;18	; time count <18


	BCS	PTCLS
	JMP	PTCLS2

PTCLS
	JSR	WPEXPL
	LDA	EXSC
	STA	Q
	LDA	EXCN
	BPL	!1
	EOR	#FF
!1	LSR	A
	LSR	A
	LSR	A
	LSR	A
	ORA	#1

	STA	U
	LDY	#7
	LDA	(XX0),Y
	STA	TGT
	LDA	RAND+1
	PHA
	LDY	#6
EXL5	LDX	#3
EXL3	INY
	LDA	XX3-7,Y
	STA	K3,X
	DEX
	BPL	EXL3
	STY	CNT
	LDY	#EXSDoff
	LDA	(INF),Y
	EOR	CNT
	STA	RAND
	INY
	LDA	(INF),Y
	EOR	CNT
	STA	RAND+1
	INY
	LDA	(INF),Y
	EOR	CNT
	STA	RAND+2
	INY
	LDA	(INF),Y
	EOR	CNT
	STA	RAND+3

	LDY	U
EXL4
	POLLBIT	20

	FNdornd2
	STA	ZZ
	LDA	K3+1
	STA	R
	LDA	K3
	JSR	EXS1
	BNE	EX11
	CPX	Yx2M1
	BCS	EX11
	STX	Y1
	LDA	K3+3
	STA	R
	LDA	K3+2
	JSR	EXS1
	BNE	EX4
	LDA	Y1
	JSR	PIXEL
EX4	DEY
	BPL	EXL4
	LDY	CNT
	CPY	TGT
	BCC	EXL5
	PLA
	STA	RAND+1
	LDA	Kpcent+6
	STA	RAND+3
	RTS

EX11	FNdornd2 
	;<BS>
	JMP	EX4
EXS1	STA	S
	FNdornd2
	ROL	A
	BCS	EX5
	JSR	FMLTU
	ADC	R
	TAX
	LDA	S
	ADC	#0
	RTS
EX5	JSR	FMLTU
	STA	T
	LDA	R
	SBC	T
	TAX
	LDA	S
	SBC	#0
	RTS

	IF	INCPLANET
PL2	RTS

PLANET	LDA	INWK+8
	;BMIPL2
	CMP	#48
	BCS	PL2
	ORA	INWK+7
	BEQ	PL2
	JSR	PROJ
	BCS	PL2
	LDA	#$60	; Planet radius=$600
	STA	P+1
	LDA	#0
	STA	P
	JSR	DVID3B2
	LDA	K+1
	BEQ	PL82
	LDA	#$F8
	STA	K
PL82
	LDA	TYPE
	LSR	A
	BCC	PL9
	JMP	SUNtrue
PL9	;JSRWPLS2 ##
	JSR	CIRCLE
	BCS	PL20
	LDA	K+1
	BEQ	PL25
PL20	RTS
PL25
;	LDA	pltog
;	BEQ	PL20	;no planet detail toggle?
	LDA	TYPE
	CMP	#$80
	BNE	PL26

	LDA	K	;Beach ball
	CMP	#6
	BCC	PL20
	LDA	INWK+14
	EOR	#128
	STA	P
	LDA	INWK+20
	JSR	PLS4
	LDX	#9
	JSR	PLS1
	STA	K2
	STY	XX16
	JSR	PLS1
	STA	K2+1
	STY	XX16+1
	LDX	#15
	JSR	PLS5
	JSR	PLS2
	LDA	INWK+14
	EOR	#128
	STA	P
	LDA	INWK+26
	JSR	PLS4
	LDX	#21
	JSR	PLS5
	JMP	PLS2
PL26	;Crater
	LDA	INWK+20	; If Uz<0 crater behind planet
	BMI	PL20
	LDX	#15
	JSR	PLS3
	CLC
	ADC	K3
	STA	K3
	TYA
	ADC	K3+1
	STA	K3+1
	JSR	PLS3
	STA	P
	LDA	K4
	SEC
	SBC	P
	STA	K4
	STY	P
	LDA	K4+1
	SBC	P
	STA	K4+1
	LDX	#9
	JSR	PLS1
	LSR	A
	STA	K2
	STY	XX16
	JSR	PLS1
	LSR	A
	STA	K2+1
	STY	XX16+1
	LDX	#21
	JSR	PLS1
	LSR	A
	STA	K2+2
	STY	XX16+2
	JSR	PLS1
	LSR	A
	STA	K2+3
	STY	XX16+3
	LDA	#64
	STA	TGT
	LDA	#0
	STA	CNT2
	JMP	PLS22

PLS1	LDA	INWK,X
	STA	P
	LDA	INWK+1,X
	AND	#127
	STA	P+1
	LDA	INWK+1,X
	AND	#128
	JSR	DVID3B2
	LDA	K
	LDY	K+1
	BEQ	*+4	;!! was P%
	LDA	#$FE
	LDY	K+3
	INX
	INX
	RTS

PLS2	LDA	#31
	STA	TGT
PLS22	LDX	#0
	STX	CNT
	DEX
	STX	FLAG
PLL4

	LDA	CNT2
	AND	#31
	TAX
	LDA	SNE,X
	STA	Q
	LDA	K2+2
	JSR	FMLTU
	STA	R
	LDA	K2+3
	JSR	FMLTU
	STA	K
	LDX	CNT2
	CPX	#33
	LDA	#0
	ROR	A
	STA	XX16+5

;	POLLBIT	20

	LDA	CNT2
	CLC
	ADC	#16
	AND	#31
	TAX
	LDA	SNE,X
	STA	Q
	LDA	K2+1
	JSR	FMLTU
	STA	K+2
	LDA	K2
	JSR	FMLTU
	STA	P
	LDA	CNT2
	ADC	#15
	AND	#63
	CMP	#33
	LDA	#0
	ROR	A
	STA	XX16+4
	LDA	XX16+5
	EOR	XX16+2
	STA	S
	LDA	XX16+4
	EOR	XX16
	JSR	ADD
	STA	T
	BPL	PL42
	TXA
	EOR	#FF
	CLC
	ADC	#1
	TAX
	LDA	T
	EOR	#$7F
	ADC	#0
	STA	T
PL42
	POLLBIT	21

	TXA
	ADC	K3
	STA	K6
	LDA	T
	ADC	K3+1
	STA	K6+1
	LDA	K
	STA	R
	LDA	XX16+5
	EOR	XX16+3
	STA	S
	LDA	K+2
	STA	P
	LDA	XX16+4
	EOR	XX16+1
	JSR	ADD
	EOR	#128
	STA	T
	BPL	PL43
	TXA
	EOR	#FF
	CLC
	ADC	#1
	TAX
	LDA	T
	EOR	#$7F
	ADC	#0
	STA	T
PL43
	JSR	BLINE
	CMP	TGT
	BEQ	*+4	;!! was P%
	BCS	PL40
	LDA	CNT2
	CLC
	ADC	STP
	AND	#63
	STA	CNT2
	JMP	PLL4
PL40	RTS


	;.PLF3M3	JMP	WPLS ##
PLF3	TXA
	EOR	#FF
	CLC
	ADC	#1
	CMP	K
	BCS	PL40	;<<<<IAN
	TAX
PLF17	LDA	#FF
	JMP	PLF5

SUNtrue	; Centre K3,K4 radius K

	LDA	vbcnt
	STA	RAND


	JSR	CHKON
	BCS	PL40
	LDA	#0
	LDX	K
	BEQ	PL40
	CPX	#$60
	ROL	A
	CPX	#$28
	ROL	A
	CPX	#$10
	ROL	A
PLF18	STA	CNT	; CNT=random fluxuation from circle

	LDA	Yx2M1
	LDX	P+2
	BNE	PLF2
	CMP	P+1
	BCC	PLF2
	LDA	P+1
	BNE	PLF2
	LDA	#1
PLF2	STA	TGT	; TGT=Initial (max) Y screen coord
	LDA	Yx2M1
	SEC
	SBC	K4
	TAX
	LDA	#0
	SBC	K4+1
	BMI	PLF3
	BNE	PLF4
	INX
	DEX
	BEQ	PLF17
	CPX	K
	BCC	PLF5
PLF4	LDX	K
	LDA	#0
PLF5	STX	V	; V=Min{K,|Yx2M-K4|} = Initial offset 
	STA	V+1
	LDA	K
	JSR	SQUA2
	STA	K2+1
	LDA	P
	STA	K2	; K2=K^2
	LDA	K3	;SUNX
	STA	YY
	LDA	K3+1	;SUNX+1
	STA	YY+1
	LDY	TGT
;	DEC	K
	LDA	#0
	STA	sunbuff+1
	STA	sunbuff+2
	STA	sunbuff+3
	STA	sunbuff+4
	STA	sunbuff+5
	STA	sunbuff+6
	STA	sunbuff+7

	TYA
	TAX
	AND	#$F8
	TAY

	LDA	V+1
	BNE	PLFL27

	TXA
	AND	#7
	BEQ	PLFL10
	CMP	#2
	BCC	PLFL11
	BEQ	PLFL12
	CMP	#4
	BCC	PLFL13
	BEQ	PLFL14
	CMP	#6
	BCC	PLFL15
	BEQ	PLFL16

PLFL17	JSR	GETSUNSIDE	; Loop for lower half
	STA	sunbuff+7
	DEC	V
	BEQ	PLFL26
PLFL16	JSR	GETSUNSIDE
	STA	sunbuff+6
	DEC	V
	BEQ	PLFL25
PLFL15	JSR	GETSUNSIDE
	STA	sunbuff+5
	DEC	V
	BEQ	PLFL24
PLFL14	JSR	GETSUNSIDE
	STA	sunbuff+4
	DEC	V
	BEQ	PLFL23
PLFL13	JSR	GETSUNSIDE
	STA	sunbuff+3
	DEC	V
	BEQ	PLFL22
PLFL12	JSR	GETSUNSIDE
	STA	sunbuff+2
	DEC	V
	BEQ	PLFL21
PLFL11	JSR	GETSUNSIDE
	STA	sunbuff+1
	DEC	V
	BEQ	PLFL20S
PLFL10	JSR	GETSUNSIDE
	STA	sunbuff+0
	DEC	V
	BEQ	PLFL2AS
	JSR	FASTROW
	TYA
	SEC
	SBC	#8
	TAY
	BCS	PLFL17
	RTS

PLFL2AS	BEQ	PLFL2A
PLFL20S	BEQ	PLFL20

PLFL27	JSR	GETSUNSIDE	; Loop for upper half
	STA	sunbuff+7
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	PLFL36
PLFL26	JSR	GETSUNSIDE
	STA	sunbuff+6
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	PLFL35
PLFL25	JSR	GETSUNSIDE
	STA	sunbuff+5
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	PLFL34
PLFL24	JSR	GETSUNSIDE
	STA	sunbuff+4
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	PLFL33
PLFL23	JSR	GETSUNSIDE
	STA	sunbuff+3
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	PLFL32
PLFL22	JSR	GETSUNSIDE
	STA	sunbuff+2
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	PLFL31
PLFL21	JSR	GETSUNSIDE
	STA	sunbuff+1
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	PLFL30
PLFL20	JSR	GETSUNSIDE
	STA	sunbuff+0
	LDX	V	; V=V+1
	INX		; exit if V>K
	STX	V
	CPX	K
	BCS	FASTROW

PLFL2A	JSR	FASTROW
	TYA
	SEC
	SBC	#8
	TAY
	BCC	!1
	JMP	PLFL27
!1	RTS


PLFL36	LDA	#0
	STA	sunbuff+6
PLFL35	LDA	#0
	STA	sunbuff+5
PLFL34	LDA	#0
	STA	sunbuff+4
PLFL33	LDA	#0
	STA	sunbuff+3
PLFL32	LDA	#0
	STA	sunbuff+2
PLFL31	LDA	#0
	STA	sunbuff+1
PLFL30	LDA	#0
	STA	sunbuff+0


FASTROW	; Draw the 8 lines for cell row with top row at screen Y
	; using buffered edge offsets in sunbuff
	LDA	sunbuff
	CMP	sunbuff+1
	BCC	!1
	LDA	sunbuff+1
!1	CMP	sunbuff+2
	BCC	!2
	LDA	sunbuff+2
!2	CMP	sunbuff+3
	BCC	!3
	LDA	sunbuff+2
!3	CMP	sunbuff+4
	BCC	!4
	LDA	sunbuff+4
!4	CMP	sunbuff+5
	BCC	!5
	LDA	sunbuff+5
!5	CMP	sunbuff+6
	BCC	!6
	LDA	sunbuff+6
!6	CMP	sunbuff+7
	BCC	!7
	LDA	sunbuff+7	; A=Min value in sunbuff
	BEQ	SLOWROW
!7	JSR	EDGES	; X1,X2=Shortest line in this row
	BCS	SLOWROW
	LDA	X2
	AND	#$F8
	STA	P+1
	LDA	X1
	ADC	#7
	BCS	SLOWROW
	AND	#$F8
	CMP	P+1
	BCS	SLOWROW
	STA	P	; Know segment P-P+1 common to each line
	CMP	#$F8
	BCS	!8
	JSR	DORIGHTROWS
	JSR	BLOCKIN
!8	JMP	DOLEFTROWS
	
SLOWROW	; Call HLOIN for whole of each line	
	POLLBIT	133
	TYA
	CLC
	ADC	#7
	TAY
	LDA	sunbuff+7
	JSR	EDGES2
	BCS	*+5
	JSR	HLOIN
	DEY
	LDA	sunbuff+6
	JSR	EDGES2
	BCS	*+5
	JSR	HLOIN
	DEY
	LDA	sunbuff+5
	JSR	EDGES2
	BCS	*+5
	JSR	HLOIN
	DEY
	LDA	sunbuff+4
	JSR	EDGES2
	BCS	*+5
	JSR	HLOIN
	DEY
	LDA	sunbuff+3
	JSR	EDGES2
	BCS	*+5
	JSR	HLOIN
	DEY
	LDA	sunbuff+2
	JSR	EDGES2
	BCS	*+5
	JSR	HLOIN
	DEY
	LDA	sunbuff+1
	JSR	EDGES2
	BCS	*+5
	JSR	HLOIN
	DEY
	LDA	sunbuff+0
	JSR	EDGES2
	BCS	ANRTS44
	JMP	HLOIN
ANRTS44	RTS


DOLEFTROWS
	POLLBIT	134
	LDX	P
	BEQ	ANRTS44
	TYA
	CLC
	ADC	#7
	TAY
	LDA	sunbuff+7
	JSR	LEFTEDGE
	DEY
	LDA	sunbuff+6
	JSR	LEFTEDGE
	DEY
	LDA	sunbuff+5
	JSR	LEFTEDGE
	DEY
	LDA	sunbuff+4
	JSR	LEFTEDGE
	DEY
	LDA	sunbuff+3
	JSR	LEFTEDGE
	DEY
	LDA	sunbuff+2
	JSR	LEFTEDGE
	DEY
	LDA	sunbuff+1
	JSR	LEFTEDGE
	DEY
	LDA	sunbuff+0
	JMP	LEFTEDGE


DORIGHTROWS
	POLLBIT	135
	LDX	P+1
	STX	X1
	TYA
	CLC
	ADC	#7
	TAY
	LDA	sunbuff+7
	JSR	RIGHTEDGE
	DEY
	LDA	sunbuff+6
	JSR	RIGHTEDGE
	DEY
	LDA	sunbuff+5
	JSR	RIGHTEDGE
	DEY
	LDA	sunbuff+4
	JSR	RIGHTEDGE
	DEY
	LDA	sunbuff+3
	JSR	RIGHTEDGE
	DEY
	LDA	sunbuff+1
	JSR	RIGHTEDGE
	DEY
	LDA	sunbuff+1
	JSR	RIGHTEDGE
	DEY
	LDA	sunbuff+0
	JMP	RIGHTEDGE


GETSUNSIDE	POLLBIT	22
	STY	Y1
	LDA	V
	JSR	SQUA2
	STA	T
	LDA	K2
	SEC
	SBC	P
	STA	Q
	LDA	K2+1
	SBC	T
	STA	R
	JSR	LL5	; Q=SQR(K2-V^2)
	LDY	Y1
	POLLBIT	23
	JSR	DORND
	AND	CNT
	LDY	Y1
	CLC
	ADC	Q
	BCC	!1
	LDA	#FF
!1			; A=Q+random fluxuation
RTS2	RTS

CIRCLE	POLLBIT	23
	JSR	CHKON
	BCS	RTS2
	;LDA#0;STALSX2	##
	LDX	K
	LDA	#8
	CPX	#8
	BCC	PL89
	LSR	A
	CPX	#60
	BCC	PL89
	LSR	A
PL89	STA	STP
CIRCLE2true	LDX	#FF
	STX	FLAG
	INX
	STX	CNT	; CNT=0
PLL3
	LDA	CNT
	JSR	FMLTU2
	LDX	#0
	STX	T
	LDX	CNT
	CPX	#33
	BCC	PL37
	EOR	#FF
	ADC	#0
	TAX
	LDA	#FF
	ADC	#0
	STA	T
	TXA
	CLC
PL37	ADC	K3
	STA	K6
	LDA	K3+1
	ADC	T
	STA	K6+1	;K6=K3+T,X
	LDA	CNT
	CLC
	ADC	#16
	JSR	FMLTU2
	TAX
	LDA	#0
	STA	T
	LDA	CNT
	CLC
	ADC	#15
	AND	#63
	CMP	#33
	BCC	PL38
	TXA		; If CNT+15>32 negate T,X
	EOR	#FF
	ADC	#0
	TAX
	LDA	#FF
	ADC	#0
	STA	T
	CLC
PL38	JSR	BLINE
	CMP	#65
	BCS	!1	; Repeat till CNT>64
	JMP	PLL3
!1	CLC
	RTS

ED3	BPL	ED1
	LDA	#0
	STA	X1
PL44	CLC
	RTS
ED1	POLLBIT	55
	SEC
	RTS

EDGES2	BEQ	ED1

EDGES	; Set X1,X2=YY+/-A or set C if line invis.
	STA	T
	CLC
	ADC	YY
	STA	X2
	LDA	YY+1
	ADC	#0
	BMI	ED1
	BEQ	!1
	LDA	#$FD
	STA	X2	; X2=RH X coord

!1
	LDA	YY
	SEC
	SBC	T
	STA	X1
	LDA	YY+1
	SBC	#0
	BNE	ED3
	LDA	X1
	CMP	X2
	RTS



LEFTEDGE	; Set X1=YY-A,X2=P and call HLOIN
	LDX	P
	STX	X2
	EOR	#FF
	SEC
	ADC	YY
	STA	X1
	LDA	YY+1
	ADC	#FF
	BEQ	LED4
	BMI	LED5
LED1	RTS

LED4	LDA	X1
	CMP	X2
	BCS	LED1
	JMP	HLOIN

LED5	LDA	#0
	STA	X1
	JMP	HLOIN



RIGHTEDGE	; Set X2=YY+A and call HLOIN
	CLC
	ADC	YY
	STA	X2
	LDA	YY+1
	ADC	#0
	BEQ	LED4
	BMI	LED1
	LDA	#$FD
	STA	X2
	CMP	X1
	BEQ	LED1
	BCC	LED1
	JMP	HLOIN


CHKON	; Set C if circle centre K3,K4 radius K off screen
	; If on set P+1=Max Y
	LDA	K3
	CLC
	ADC	K
	LDA	K3+1
	ADC	#0
	BMI	PL21
	LDA	K3
	SEC
	SBC	K
	LDA	K3+1
	SBC	#0
	BMI	PL31
	BNE	PL21
PL31
	LDA	K4
	CLC
	ADC	K
	STA	P+1
	LDA	K4+1
	ADC	#0
	BMI	PL21
	STA	P+2
	LDA	K4
	SEC
	SBC	K
	TAX
	LDA	K4+1
	SBC	#0
	BMI	PL442
	BNE	PL21
	CPX	Yx2M1
	RTS
PL21	SEC
	RTS

PL442	CLC
	RTS


PLS3	JSR	PLS1
	STA	P
	LDA	#222
	STA	Q
	STX	U
	JSR	MULTU
	LDX	U
	LDY	K+3
	BPL	PL12
	EOR	#FF
	CLC
	ADC	#1
	BEQ	PL12
	LDY	#FF
	RTS
PL12	LDY	#0
	RTS

PLS4	STA	Q
	JSR	ARCTAN
	LDX	INWK+14
	BMI	!1
	EOR	#128
!1	LSR	A
	LSR	A
	STA	CNT2
	RTS

PLS5	JSR	PLS1
	STA	K2+2
	STY	XX16+2
	JSR	PLS1
	STA	K2+3
	STY	XX16+3
	RTS


ARCTAN	;A=tan-1(P/Q)
	LDA	P
	EOR	Q
	;AND#128
	STA	T1
	LDA	Q
	BEQ	!2
	ASL	A
	STA	Q
	LDA	P
	ASL	A
	CMP	Q
	BCS	!1
	JSR	!ARS1
	SEC
!4	LDX	T1
	BMI	!3
	RTS
!1	LDX	Q
	STA	Q
	STX	P
	TXA
	JSR	!ARS1
	STA	T
	LDA	#64
	SBC	T
	BCS	!4
!2	LDA	#63
	RTS
!3	STA	T
	LDA	#128
	;SEC
	SBC	T
	RTS
!ARS1	JSR	LL28
	LDA	R
	LSR	A
	LSR	A
	LSR	A
	TAX
	LDA	ACT,X
	RTS





BLINE
	POLLBIT	24
	TXA
	ADC	K4
	STA	K6+2
	LDA	K4+1
	ADC	T
	STA	K6+3	;K6+2=K4+T,X
	LDA	FLAG	; If flag set zero flag
	BEQ	BL1	; but don't draw line
	INC	FLAG
	JMP	BL7

BL1	LDA	K5
	STA	XX15
	LDA	K5+1
	STA	XX15+1
	LDA	K5+2
	STA	XX15+2
	LDA	K5+3
	STA	XX15+3
	LDA	K6
	STA	XX15+4
	LDA	K6+1
	STA	XX15+5
	LDA	K6+2
	STA	XX12
	LDA	K6+3
	STA	XX12+1	; Draw line from K5 to K6

	POLLBIT	25


	JSR	LL145
	BCS	BL7	; Line fully of screen?

	; >>line bug: At this point we got X1=FF,X2=0 SWAP=0
	; but Ian has hopefully fixed this due to his extreme
	; brilliance and dogged perseverence in wading through
	; David's "eee, that were t' first routine I ever rort
	; lad, ai and it t'wer on atom an 'all, now that were
	; a real computer..." etc. etc. and on and on.


	LDA	SWAP
	BEQ	!9
	LDA	X1
	LDY	X2
	STA	X2
	STY	X1
	LDA	Y1
	LDY	Y2
	STA	Y2
	STY	Y1
!9
!2	JSR	LOIN	; ##
!3

BL7	
	LDA	K6
	STA	K5
	LDA	K6+1
	STA	K5+1
	LDA	K6+2
	STA	K5+2
	LDA	K6+3
	STA	K5+3	; K5=K6 (four byte)
	LDA	CNT
	CLC
	ADC	STP
	STA	CNT	; CNT=CNT+STP
	RTS


	ELSE
PL21	SEC
	RTS


PLANET
SUNtrue	RTS
	ENDIF	; (PLANET)



	IF	INCDUST

STARStrue


	LDX	VIEW
	BEQ	STARS1
	DEX
	BNE	ST11
	JMP	STARS6
ST11	JMP	STARS2
STARS1
	LDY	NOSTM
STL1	POLLBIT	26
	JSR	DV42
	LDA	R
	LSR	P
	ROR	A
	LSR	P
	ROR	A
	ORA	#1
	STA	Q
	LDA	SZL,Y
	SBC	DELT4
	STA	SZL,Y
	LDA	SZ,Y
	STA	ZZ
	SBC	DELT4+1
	STA	SZ,Y
	JSR	MLU1
	STA	YY+1
	LDA	P
	ADC	SYL,Y
	STA	YY
	STA	R
	LDA	Y1
	ADC	YY+1
	STA	YY+1
	STA	S
	LDA	SX,Y
	STA	X1
	JSR	MLU2
	STA	XX+1

	POLLBIT	27

	LDA	P
	ADC	SXL,Y
	STA	XX
	LDA	X1
	ADC	XX+1
	STA	XX+1
	EOR	ALP2+1
	JSR	MLS1
	JSR	ADD
	STA	YY+1
	STX	YY
	EOR	ALP2
	JSR	MLS2
	JSR	ADD
	STA	XX+1
	STX	XX

	POLLBIT	227

	LDX	BET1
	LDA	YY+1
	EOR	BET2+1
	JSR	MULTS-2
	STA	Q
	JSR	MUT2
	ASL	P
	ROL	A
	STA	T
	LDA	#0
	ROR	A
	ORA	T
	JSR	ADD
	STA	XX+1
	TXA
	STA	SXL,Y
	LDA	YY
	STA	R
	LDA	YY+1
	STA	S
;JSRMADSTASSTXR
	LDA	#0
	STA	P

	POLLBIT	28

	LDA	BETA
	EOR	#128
	JSR	ADD
	STA	YY+1
	TXA
	STA	SYL,Y
	LDA	XX+1
	STA	X1
	STA	SX,Y	;##
	AND	#127
	CMP	#120
	BCS	KILL1
	LDA	YY+1
	STA	SY,Y
	STA	Y1
	AND	#127
	CMP	#120
	BCS	KILL1
	LDA	SZ,Y
	CMP	#16
	BCC	KILL1
	STA	ZZ
STC1	JSR	SPIXEL2
	DEY
	BEQ	!1
	JMP	STL1
!1	RTS

KILL1	JSR	DORND
	ORA	#$4
	STA	Y1
	STA	SY,Y
	JSR	DORND
	ORA	#$10
	AND	#$F0
	STA	X1
	STA	SX,Y
	JSR	DORND
	ORA	#$90
	STA	SZ,Y
	STA	ZZ
	POLLBIT	240

	LDA	Y1
	JMP	STC1

STARS6
	LDY	NOSTM
STL6	POLLBIT	29
	JSR	DV42
	LDA	R
	LSR	P
	ROR	A
	LSR	P
	ROR	A
	ORA	#1
	STA	Q
	LDA	SX,Y
	STA	X1
	JSR	MLU2
	STA	XX+1
	LDA	SXL,Y
	SBC	P
	STA	XX
	LDA	X1
	SBC	XX+1
	STA	XX+1
	JSR	MLU1
	STA	YY+1

	POLLBIT	30

	LDA	SYL,Y
	SBC	P
	STA	YY
	STA	R
	LDA	Y1
	SBC	YY+1
	STA	YY+1
	STA	S
	LDA	SZL,Y
	ADC	DELT4
	STA	SZL,Y
	LDA	SZ,Y
	STA	ZZ
	ADC	DELT4+1
	STA	SZ,Y
	LDA	XX+1
	EOR	ALP2
	JSR	MLS1
	JSR	ADD
	STA	YY+1
	STX	YY
	EOR	ALP2+1
	JSR	MLS2
	JSR	ADD
	STA	XX+1
	STX	XX
	LDA	YY+1
	EOR	BET2+1
	LDX	BET1
	JSR	MULTS-2
	STA	Q
	LDA	XX+1
	STA	S
	EOR	#128
	JSR	MUT1
	ASL	P
	ROL	A
	STA	T
	LDA	#0
	ROR	A
	ORA	T
	JSR	ADD
	STA	XX+1
	TXA
	STA	SXL,Y
	LDA	YY
	STA	R

	POLLBIT	31

	LDA	YY+1
	STA	S
	LDA	#0
	STA	P
	LDA	BETA
	JSR	ADD
	STA	YY+1
	TXA
	STA	SYL,Y
	LDA	XX+1
	STA	X1
	STA	SX,Y
	LDA	YY+1
	STA	SY,Y
	STA	Y1
	AND	#127
	CMP	#110
	BCS	KILL62	;###
	LDA	SZ,Y
	CMP	#160
	BCS	KILL6
	STA	ZZ
STC6	JSR	SPIXEL2
	DEY
	BEQ	ST3
	JMP	STL6
ST3	RTS




KILL62	; Gone to far away
	JSR	DORND
	AND	#31	;127
	ADC	#10
	STA	SZ,Y
	STA	ZZ
	LSR	A
	BCS	KILL63
	LSR	A
	LDA	#$E0
	ROR	A
	STA	X1
	STA	SX,Y
	JSR	DORND
	AND	#$BF
	STA	Y1
	STA	SY,Y
	JMP	STC6


KILL6	JSR	DORND
	AND	#127
	ADC	#10
	STA	SZ,Y
	STA	ZZ
KILL63	JSR	DORND
	AND	#$F9
	STA	X1
	STA	SX,Y
	LSR	A
	LDA	#216
	ROR	A
	STA	Y1
	STA	SY,Y
	BNE	STC6


STARS2	LDA	#0
	CPX	#2
	ROR	A
	STA	RAT
	EOR	#128
	STA	RAT2
	JSR	ST2
	LDY	NOSTM
STL2	POLLBIT	32
	LDA	SZ,Y
	STA	ZZ
	LSR	A
	LSR	A
	LSR	A
	JSR	DV41
	LDA	P
	STA	newzp
	EOR	RAT2
	STA	S
	LDA	SXL,Y
	STA	P
	LDA	SX,Y
	STA	X1
	JSR	ADD	;<<--
	STA	S
	STX	R

	POLLBIT	33

	LDA	SY,Y
	STA	Y1
	EOR	BET2
	LDX	BET1
	JSR	MULTS-2
	JSR	ADD
	STX	XX
	STA	XX+1
	LDX	SYL,Y
	STX	R
	LDX	Y1
	STX	S
	LDX	BET1
	EOR	BET2+1
	JSR	MULTS-2
	JSR	ADD
	STX	YY
	STA	YY+1
	LDX	ALP1
	EOR	ALP2
	JSR	MULTS-2
	STA	Q
	LDA	XX
	STA	R
	LDA	XX+1
	STA	S
	EOR	#128
	JSR	MAD
	STA	XX+1
	TXA
	STA	SXL,Y

	POLLBIT	34

	LDA	YY
	STA	R
	LDA	YY+1
	STA	S
	JSR	MAD
	STA	S
	STX	R
	LDA	#0
	STA	P
	LDA	ALPHA
	JSR	ADD
	STA	YY+1
	TXA
	STA	SYL,Y
	LDA	XX+1
	STA	SX,Y
	STA	X1	; ##
	AND	#127
	CMP	#120
	BCS	KILL2
	EOR	#$7F
	CMP	newzp
	BCC	KILL2
	BEQ	KILL2
	LDA	YY+1
	STA	SY,Y
	STA	Y1
	AND	#127
	CMP	#116
	BCS	ST5
STC2	JSR	SPIXEL2
	DEY
	BEQ	ST2
	JMP	STL2	;<<--
ST2	LDA	ALPHA
	EOR	RAT
	STA	ALPHA
	LDA	ALP2
	EOR	RAT
	STA	ALP2
	EOR	#128
	STA	ALP2+1
	LDA	BET2
	EOR	RAT
	STA	BET2
	EOR	#128
	STA	BET2+1
	RTS

KILL2	; Exitted on X
	JSR	DORND
	STA	Y1
	STA	SY,Y
	LDA	#115
	ORA	RAT
	STA	X1
	STA	SX,Y
	BNE	STF1
ST5	; Exitted on Y
	JSR	DORND
	STA	X1
	STA	SX,Y
	LDA	#126
	ORA	ALP2+1
	STA	Y1
	STA	SY,Y
STF1	JSR	DORND
	ORA	#8
	STA	ZZ
	STA	SZ,Y
	BNE	STC2



	ENDIF	; (INCDUST)


ytbl	DB	(Yabs&$F8)+8
	DB	(Yabs&$F8)+8+8
	DB	(Yabs&$F8)+18+8
	DB	(Yabs&$F8)+40+8
;	DB	(Yabs&$F8)+104+8


	IF	INCHALL

HANGER

	LDX	#0

HAL1
	STX	TGT
	LDA	ytbl,X
	TAY

	LDA	#8
	LDX	#ncl-4
	JSR	HAS2


	LDA	#$F0
	LDX	#ncl-4
	JSR	DRAWLEFT

	LDA	HANG	;+2
	BEQ	HA2

	LDA	#$80
	LDX	#(ncl/2)-4
	JSR	HAS2

	LDA	#$7F
	LDX	#(ncl/2)-4
	JSR	DRAWLEFT

HA2	LDX	TGT
	INX
	CPX	#4
	BNE	HAL1

	JSR	DORND
	AND	#7
	ORA	#4
	LDY	#0
!1	JSR	DRAWDOWN
	CLC
	ADC	#10
	BCS	!2
	CMP	#$F8
	BCC	!1
!2	RTS

DRAWDOWN	; Draw down till you hit something from A,Y
	STA	S
	STY	YSAV
	FNcelladd	LI
	LDA	S
	AND	#7
	STA	T
!5
	POLLBIT	150
	LDX	#0
	LDA	(LI,X)
	BEQ	!1
	FNfoentry	SC
	LDY	#0
	LDX	T
!2	LDA	(SC),Y
	AND	TWOS,X
	BNE	!6
	LDA	(SC),Y
	ORA	TWOS,X
	STA	(SC),Y
	INY
	CPY	#8
	BNE	!2
	JMP	!3


!1	LDA	T
	CLC
	ADC	#vrtline
	STA	(LI,X)
!3	LDA	LI
	CLC
	ADC	#ncl
	STA	LI
	BCC	!5
	INC	LI+1
	JMP	!5

!6	LDA	S
	LDY	YSAV
	RTS



HAS2	;Draw right till you hit something from A,Y
	; Max length=X

	STX	R
	STY	YSAV
	FNcelladd	LI
	TYA
	AND	#7
	TAY

HS2L
	POLLBIT	35
	LDX	#0
	LDA	(LI,X)
	BEQ	HS51
	FNfoentry	SC
	LDA	(SC),Y
	BEQ	!1


	LDA	#128
!3	STA	T
	AND	(SC),Y
	BNE	!2
	LDA	T
	SEC
	ROR	A
	JMP	!3
!2	LDA	T
	ORA	(SC),Y
	STA	(SC),Y
	LDY	YSAV
	RTS



!1	LDA	#FF
	STA	(SC),Y
hs11
	DEC	R
	BEQ	HS2EX
	INC	LI
	BNE	HS2L
	INC	LI+1
	JMP	HS2L
HS2EX	LDY	YSAV
	RTS


HS51
	TYA
	CLC
	ADC	#horiz
	STA	(LI,X)
	JMP	hs11

	



DRAWLEFT	;Draw left till you hitsomething
	; Max length=X

	STX	R
	STY	YSAV
	FNcelladd	LI
	TYA
	AND	#7
	TAY

!4
	POLLBIT	36
	LDX	#0
	LDA	(LI,X)
	BEQ	!5
	FNfoentry	SC
	LDA	(SC),Y
	BEQ	!1


	LDA	#1
!3	STA	T
	AND	(SC),Y
	BNE	!2
	LDA	T
	SEC
	ROL	A
	JMP	!3
!2	LDA	T
	ORA	(SC),Y
	STA	(SC),Y
!7	LDY	YSAV
	RTS



!1	LDA	#FF
	STA	(SC),Y
!6
	DEC	R
	BEQ	!7
	LDA	LI
	BNE	!8
	DEC	LI+1
!8	DEC	LI
	JMP	!4


!5
	TYA
	CLC
	ADC	#horiz
	STA	(LI,X)
	JMP	!6


;\ Ship,X,Z(low bit=sgn X)

HATB	DB	9
	DB	&54
	DB	&3B
	DB	10
	DB	&82
	DB	&B0
	DB		0
	DB	0
	DB	0
      	DB	OIL
	DB	&50
	DB	&11
	DB	OIL
	DB	&D1
	DB	&28
	DB	OIL
	DB	&40
	DB	&06
      	DB	COPS
	DB	&60
	DB	&90
	DB	KRA
	DB	&10
	DB	&D1
	DB	0
	DB	0
	DB	0
      	DB	16
	DB	&51
	DB	&F8
	DB	19
	DB	&60
	DB	&75
	DB	0
	DB	0
	DB	0


;HATBR
;	DB	$5E,$87,$A2,$BE
;
CLIPTEST	MACRO
	FNset2b	XX15,@1
	FNset2b XX15+2,@2
	FNset2b	XX15+4,@3
	FNset2b	XX12,@4
	JSR	LL145
	BCS	!1
	JSR	LOIN
!1

	ENDM

HALLtrue

	LDA	#0
	JSR	TT66smart

;	LDX	VIEW
;	LDA	HATB,X

	LDA	vbcnt
	STA	RAND+1
;	LDA	QQ1

	LDA	#$86
	STA	RAND+3
	LDA	QQ0
	STA	RAND+0
	LDA	TALLY+1
	STA	RAND+2

	JSR	DORND
	BPL	HA7
	AND	#3
	STA	T
	ASL	A
	ASL	A
	ASL	A
	ADC	T
	TAX	
	LDY	#3
	STY	CNT2
HAL8	LDY	#2
HAL9	LDA	HATB,X
	STA	XX15,Y
	INX	
	DEY	
	BPL	HAL9
	TXA	
	PHA	
	JSR	HAS1
	PLA	
	TAX	
	DEC	CNT2
	BNE	HAL8
	LDY	#128
	BNE	HA9
HA7	LSR	A
	STA	XX15+1
	JSR	DORND
	STA	XX15
	JSR	DORND
	AND	#3
	ADC	#SH3
	STA	XX15+2
	JSR	HAS1
	LDY	#0

HA9
	STY	HANG	;+2
;	LDY	#3
;	STY	HANG+0	
;	LDY	#0
;	STY	HANG+1
	JSR	HANGER

	LDA	#0
	STA	charmin
	LDA	#(nli+banner)*4+basecell
	STA	zermax


	JMP	ENDHALL


 
ZINFplot
	POLLBIT	37

	LDY	#NIdwn-1
	LDA	#0
!1	STA	INWK,Y
	DEY
	BPL	!1

	POLLBIT	38

	LDA	#96
	STA	INWK+18
	STA	INWK+22
	ORA	#128
	STA	INWK+14
	RTS



HAS1	JSR	ZINFplot
	LDA	XX15
	STA	INWK+6
	LSR	A
	ROR	INWK+2
	LDA	XX15+1
	STA	INWK
	LSR	A
	LDA	#1
	ADC	#0
	STA	INWK+7
	LDA	#128
	STA	INWK+5
	STA	RAT2
	LDA	#$B
	STA	EXCN
	JSR	DORND
	STA	XSAV
HAL5	LDX	#21
	LDY	#9
	JSR	MVS5smart
	LDX	#23
	LDY	#11
	JSR	MVS5smart
	LDX	#25
	LDY	#13
	JSR	MVS5smart
	DEC	XSAV
	BNE	HAL5
	LDY	XX15+2
	BEQ	HA1
	TYA	
	ASL	A
	TAX	
	LDA	XX21-2,X
	STA	XX0
	LDA	XX21-1,X
	STA	XX0+1
	BEQ	HA1
	LDY	#1
	LDA	(XX0),Y
	STA	Q
	INY	
	LDA	(XX0),Y
	STA	R
	JSR	LL5
	LDA	#100
	SBC	Q
	LSR	A
	STA	INWK+3
	JSR	TIDYtrue
	JMP	LL9true

HA1	RTS

	ENDIF


TI2	TYA
	LDY	#2
	JSR	TIS3
	STA	INWK+20;Uz=-(FxUx+FyUy)/Fz
	JMP	TI3
TI1	TAX
	LDA	XX15+1
	AND	#$60
	BEQ	TI2
	LDA	#2
	JSR	TIS3
	STA	INWK+18
	JMP	TI3


TIDYTRUE
	POLLBIT	39
 	LDA	INWK+10
	STA	XX15
	LDA	INWK+12
	STA	XX15+1
	LDA	INWK+14
	STA	XX15+2
	JSR	NORM
	LDA	XX15
	STA	INWK+10
	LDA	XX15+1
	STA	INWK+12
	LDA	XX15+2
	STA	INWK+14
	LDY	#4
	LDA	XX15
	AND	#$60
	BEQ	TI1
	LDX	#2
	LDA	#0
	JSR	TIS3
	STA	INWK+16
TI3
	POLLBIT	40

	LDA	INWK+16
	STA	XX15
	LDA	INWK+18
	STA	XX15+1
	LDA	INWK+20
	STA	XX15+2
	JSR	NORM
	LDA	XX15
	STA	INWK+16
	LDA	XX15+1
	STA	INWK+18
	LDA	XX15+2
	STA	INWK+20
	LDA	INWK+12
	STA	Q
	LDA	INWK+20
	JSR	MULT12
	LDX	INWK+14
	LDA	INWK+18
	JSR	TIS1
	EOR	#128
	STA	INWK+22

	POLLBIT	41

	LDA	INWK+16
	JSR	MULT12
	LDX	INWK+10
	LDA	INWK+20
	JSR	TIS1
	EOR	#128
	STA	INWK+24

	POLLBIT	42

	LDA	INWK+18
	JSR	MULT12
	LDX	INWK+12
	LDA	INWK+16
	JSR	TIS1
	EOR	#128
	STA	INWK+26 ;FxU/96(LHS)

	POLLBIT	43

	LDA	#0
	LDX	#14
!1	STA	INWK+9,X
	DEX
	DEX
	BPL	!1
	RTS


TIS3	STA	P+2
	LDA	INWK+10,X
	STA	Q
	LDA	INWK+16,X
	JSR	MULT12
	LDX	INWK+10,Y
	STX	Q
	LDA	INWK+16,Y
 	JSR	MAD
	STX	P
	LDY	P+2
	LDX	INWK+10,Y
	STX	Q
	EOR	#128
	; A= AP/Q
	STA	P+1
	EOR	Q
	AND	#128
	STA	T
	LDA	#0
	LDX	#16
	ASL	P
	ROL	P+1
	ASL	Q
	LSR	Q
!2	ROL	A
	CMP	Q
	BCC	*+4	;!! was P%
	SBC	Q
	ROL	P
	ROL	P+1
	DEX
	BNE	!2
	LDA	P
	ORA	T
	RTS


	
SCR2	LDA	#$F0
	STA	ATTRIBUTES+0,Y
	STA	ATTRIBUTES+4+0,Y
	STA	ATTRIBUTES+8+0,Y
SCR1	RTS

SCANtrue	LDA	MODE	; Exit if
	BNE	SCR1	; trade mode
	LDX	TYPE	; ship is planet or sun
	BMI	SCR1
	LDA	NINB
	BEQ	SCR1	; or has no sprites assigned
	TAX
	ASL	A
	ADC	NINB
	ASL	A
	ASL	A
	ADC	#4*scanbase-12 ; Y=sprite offset=12*(NINB-1)+4*scanbase
	TAY
	LDA	SCAT,X	
	STA	ATTRIBUTES+2,Y

;	LDA	INWK+1	; Crude cube range check
;	ORA	INWK+4	; replaced by subtle sphere
;	ORA	INWK+7	; check exclusive to NES
;	AND	#$C0	; 
;	BNE	SCR2

;	LDA	#$20
;	JSR	FAROF2


	LDA	INWK+1
	CMP	INWK+4	; A is total
	BCS	!4
	LDA	INWK+4
!4	CMP	INWK+7
	BCS	!5
	LDA	INWK+7
!5	CMP	#$40
	BCS	SCR2
	STA	LI
	LDA	INWK+1	
	ADC	INWK+4
	ADC	INWK+7
	BCS	SCR2
	SEC
	SBC	LI
	LSR	A
	LSR	A
	STA	LI+1
	LSR	A
	LSR	A
	ADC	LI+1
	ADC	LI
	CMP	#$40
	BCS	SCR2


	LDA	INWK+1
	CLC
	LDX	INWK+2
	BPL	!1
	EOR	#FF
	ADC	#1
!1	ADC	#124
	STA	LI
	LDA	INWK+7
	LSR	A
	LSR	A
	CLC
	LDX	INWK+8
	BMI	!2
	EOR	#FF
	SEC
!2
	IF	DIALSONTOP
	ADC	#5*8+spryoffD+5
	ELSE
	ADC	#(nli+5)*8+spryoff+5-4*SMALLDIALS
	ENDIF
	STA	LI+1	; LI,LI+1=Base of bar
	LDA	INWK+4
	CMP	#48
	BCC	!3
	LDA	#47
!3	LSR	A
	STA	Y1
	CLC
	BEQ	SCA1
	LDX	INWK+5
	BPL	SCA1
	JMP	SCA5

	;Bar goes up screen
SCA1
	LDA	LI+1
	SEC
	SBC	#8
	STA	LI+1
	LDA	Y1
	CMP	#16
	BCC	SCA2
	LDA	LI
	STA	ATTRIBUTES+3,Y
	STA	ATTRIBUTES+4+3,Y
	LDA	LI+1
	STA	ATTRIBUTES+0,Y
	SEC
	SBC	#8
	STA	ATTRIBUTES+4+0,Y

	LDA	ATTRIBUTES+2,Y
	AND	#3
	STA	ATTRIBUTES+2,Y
	STA	ATTRIBUTES+4+2,Y
	LDA	LI+1
	SBC	#16
	STA	LI+1
	BNE	SCA4


	
SCA2	CMP	#8
	BCC	SCA3
	LDA	#$F0
	STA	ATTRIBUTES+0,Y	
	LDA	LI
	STA	ATTRIBUTES+4+3,Y
	LDA	LI+1
	STA	ATTRIBUTES+4+0,Y

	LDA	ATTRIBUTES+2,Y
	AND	#3
	STA	ATTRIBUTES+4+2,Y

	LDA	LI+1
	SBC	#8
	STA	LI+1
	BNE	SCA4

SCA3	LDA	#$F0
	STA	ATTRIBUTES+0,Y
	STA	ATTRIBUTES+4+0,Y


SCA4	LDA	Y1
	AND	#7
	CLC
	ADC	#scanbars+1
	STA	ATTRIBUTES+8+1,Y

	LDA	ATTRIBUTES+2,Y
	AND	#3
	STA	ATTRIBUTES+8+2,Y

	LDA	LI
	STA	ATTRIBUTES+8+3,Y
	LDA	LI+1
	STA	ATTRIBUTES+8+0,Y
	RTS


	;Bar goes down screen
SCA5
	CLC
	ADC	LI+1
	CMP	#(nli+dili+1)*8+spryoff+2
	BCC	!1
	LDA	#(nli+dili+1)*8+spryoff+2
!1	SEC
	SBC	LI+1
	STA	Y1
	CMP	#16
	BCC	SCA6
	LDA	LI
	STA	ATTRIBUTES+3,Y
	STA	ATTRIBUTES+4+3,Y
	LDA	LI+1
	STA	ATTRIBUTES+0,Y
	CLC
	ADC	#8
	STA	ATTRIBUTES+4+0,Y

	LDA	ATTRIBUTES+2,Y
	ORA	#$20
	STA	ATTRIBUTES+2,Y
	STA	ATTRIBUTES+4+2,Y


	LDA	LI+1
	CLC
	ADC	#16
	STA	LI+1
	BNE	SCA8


	
SCA6	CMP	#8
	BCC	SCA7
	LDA	#$F0
	STA	ATTRIBUTES+0,Y	
	LDA	LI
	STA	ATTRIBUTES+4+3,Y
	LDA	LI+1
	STA	ATTRIBUTES+4+0,Y

	LDA	ATTRIBUTES+2,Y
	ORA	#$20
	STA	ATTRIBUTES+4+2,Y

	LDA	LI+1
	ADC	#7
	STA	LI+1
	BNE	SCA8

SCA7	LDA	#$F0
	STA	ATTRIBUTES+0,Y
	STA	ATTRIBUTES+4+0,Y


SCA8	LDA	Y1
	AND	#7
	CLC
	ADC	#scanbars+1
	STA	ATTRIBUTES+8+1,Y

	LDA	ATTRIBUTES+2,Y
	ORA	#$E0
	STA	ATTRIBUTES+8+2,Y

	LDA	LI
	STA	ATTRIBUTES+8+3,Y
	LDA	LI+1
	STA	ATTRIBUTES+8+0,Y
	RTS


FREESCAN2true
	LDA	#0
	LDY	#(NINB-INWK)
	STA	(INF),Y

FREESCANtrue	;	Free ship's scanner sprites
	POLLBIT	113
	LDX	NINB
	BEQ	!1
	LDA	#0
	STA	SCSP,X
	TXA
	ASL	A
	ADC	NINB
	ASL	A
	ASL	A
	TAX
	LDA	MODE
	BNE	!2
	LDA	#$F0
	STA	ATTRIBUTES+4*scanbase-12,X
	STA	ATTRIBUTES+4*scanbase-12+4,X
	STA	ATTRIBUTES+4*scanbase-12+8,X
!2	LDA	#0
	STA	NINB
!1	RTS


