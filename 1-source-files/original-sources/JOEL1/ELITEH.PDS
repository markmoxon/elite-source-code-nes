;
;REM	ELITE <H> Joint
;
;	Mveit, Look
;

	IF	SEETRIBS
TRIBDIR	EQUB	0
	EQUB	1
	EQUB	FF
	EQUB	0
TRIBDIRH	EQUB	0
	EQUB	0
	EQUB	FF
	EQUB	0
SPMASK	DW	$04FB
	DW	$08F7
	DW	$10EF
	DW	$20DF
	DW	$40BF
	DW	$807F
MVTRIBS	RTS

;	LDA	MCNT
;	AND	#7
;	CMP	TRIBCT
;	BCC	*+5	;!! was P%
;	JMP	NOMVETR
;	TAY
;;	LDA	#5
;	JSR	SETL1
;	JSR	DORND
;	CMP	#235
;	BCC	MVTR1
;	AND	#3
;	TAX
;	LDA	TRIBDIR,X
;	STA	TRIBVX,Y
;	LDA	TRIBDIRH,X
;	STA	TRIBVXH,Y
;	JSR	DORND
;	AND	#3
;	TAX
;	LDA	TRIBDIR,X
;	STA	TRIBVXH,Y
;MVTR1	LDA	TRIBXL,Y
;	ADC	TRIBVX,Y
;	STA	TRIBXL,Y
;	LDA	TRIBXH,Y
;	ADC	TRIBVXH,Y
;	STA	TRIBXH,Y
;	LDA	TRIBXL,Y
;	CLC
;	ADC	#50
;	STA	LI
;	LDA	TRIBXH,Y
;	ADC	#0
;	STA	LI+1
;	LDA	TRIBY,Y
;	ADC	TRIBVY,Y
;	STA	TRIBY,Y
;	CLC
;	ADC	#30
;	STA	SC
;	TYA
;	CLC
;	ADC	#3
;	LDY	SC
;;	SPRITEXY
;;	 CLI
;	LDA	#4
;	JSR	SETL1
;	JMP	NOMVETR
;	RTS
	ENDIF	;(SEETRIBS)


PAS1true	LDA	#conhieght
	STA	INWK+3
	LDA	#0
	STA	INWK
	STA	INWK+6
	LDA	#2
	STA	INWK+7
	JSR	ONESHIP
	INC	MCNT
	JMP	MVEIT

	JMP	RDKEY



MVEIT	POLLBIT	120

	LDA	INWK+31
	AND	#$A0
	BNE	MV30
	LDA	MCNT
	EOR	XSAV
	AND	#15
	BNE	!MV3	; Call tidy every 16 game cycles
	JSR	TIDY	; unless exploding
 
!MV3	LDX	TYPE
	BPL	!1
	JMP	MV40
!1	LDA	INWK32	; Only call tactics
	BPL	MV30	; if top bit of INWK32 set
	CPX	#MSL
	BEQ	MV26
	LDA	MCNT	; and correct game cycle
	EOR	XSAV
	AND	#7
	BNE	MV30
MV26
	POLLBIT	121

;	LDA	#0
;	STA	CRGO+2
;	STA	CRGO+3

	JSR	TACTICS

	IF	0
	LDA	TYPE
	STA	CRGO+1
	LDA	NEWB
;	STA	CRGO+2
	LDA	INWK32
;	STA	CRGO+3
	LDA	INWK+28
	STA	CRGO+4
	LDA	INWK+27
	STA	CRGO+5	;cccccccccccccc
	LDA	CNT
	STA	CRGO+6
	LDA	CNT2
;	STA	CRGO+7
	LDA	INWK+29
	STA	CRGO+8
	LDA	INWK+30
	STA	CRGO+9
	LDA	RAT
;	STA	CRGO+11
	LDA	XX15
	STA	CRGO+13
	LDA	XX15+1
	STA	CRGO+14
	LDA	XX15+2
	STA	CRGO+15

	ENDIF

MV30

	POLLBIT	122
;	JSR	SCAN

	LDA	INWK+27
	ASL	A
	ASL	A
	STA	Q
	LDA	INWK+10
	AND	#127
	JSR	FMLTU
	STA	R
	LDA	INWK+10
	LDX	#0
	JSR	MVT1m2
	LDA	INWK+12
	AND	#127
	JSR	FMLTU
	STA	R
	LDA	INWK+12
	LDX	#3
	JSR	MVT1m2
	LDA	INWK+14
	AND	#127
	JSR	FMLTU
	STA	R

	POLLBIT	123 

	LDA	INWK+14
	LDX	#6
	JSR	MVT1m2


!3	LDA	INWK+27
	CLC
	ADC	INWK+28
	BPL	!2
	LDA	#0
!2	STA	INWK+27
	LDY	#15
	SHIPREAD
	CMP	INWK+27
	BCS	!1
	STA	INWK+27	;INWK+27=Min{A,(xx0),15}
!1	LDA	#0
	STA	INWK+28	;Zero accn once used



	; Now rotate position about player

	LDX	ALP1
	LDA	INWK
	EOR	#FF
	STA	P
	LDA	INWK+1
	JSR	MLTU2m2
	STA	P+2
	LDA	ALP2+1
	EOR	INWK+2
	LDX	#3
	JSR	MVT6
	STA	K2+3

	POLLBIT	204

	LDA	P+1
	STA	K2+1
	EOR	#FF
	STA	P
	LDA	P+2
	STA	K2+2	;K2=Y-aX
	LDX	BET1
	JSR	MLTU2m2
	STA	P+2
	LDA	K2+3
	EOR	BET2
	LDX	#6
	JSR	MVT6
	STA	INWK+8

	POLLBIT	124

	LDA	P+1
	STA	INWK+6
	EOR	#FF
	STA	P
	LDA	P+2
	STA	INWK+7	;Z=Z+bK2
	JSR	MLTU2
	STA	P+2
	LDA	K2+3
	STA	INWK+5
	EOR	BET2
	EOR	INWK+8
	BPL	MV43
	LDA	P+1
	ADC	K2+1
	STA	INWK+3
	LDA	P+2
	ADC	K2+2
	STA	INWK+4
	JMP	MV44
MV43
	POLLBIT	203

	LDA	K2+1
	SBC	P+1
	STA	INWK+3
	LDA	K2+2
	SBC	P+2
	STA	INWK+4
	BCS	MV44
	LDA	#1
	SBC	INWK+3
	STA	INWK+3
	LDA	#0
	SBC	INWK+4
	STA	INWK+4
	LDA	INWK+5
	EOR	#128
	STA	INWK+5
MV44			;Y=K2-bZ

	POLLBIT	125

	LDX	ALP1
	LDA	INWK+3
	EOR	#FF
	STA	P
	LDA	INWK+4
	JSR	MLTU2-2
	STA	P+2
	LDA	ALP2
	EOR	INWK+5
	LDX	#0
	JSR	MVT6
	STA	INWK+2
	LDA	P+2
	STA	INWK+1
	LDA	P+1
	STA	INWK	;X=X+aY

MV45	POLLBIT	126
	LDA	DELTA
	STA	R
	LDA	#128
	LDX	#6
	JSR	MVT1
	LDA	TYPE
	AND	#$81
	CMP	#$81
	BNE	*+3	;!! was P%
	RTS		;Z=Z-d

	; Rotate vectors due to player's roll, dive/climb
	; unless sun

	LDY	#9
	JSR	MVS4
	LDY	#15
	JSR	MVS4
	LDY	#21
	JSR	MVS4
	LDA	INWK+30
	AND	#128
	STA	RAT2
	LDA	INWK+30
	AND	#127
	BEQ	MV8
	CMP	#127
	SBC	#0
	ORA	RAT2
	STA	INWK+30
	LDX	#15
	LDY	#9
	JSR	MVS5
	LDX	#17
	LDY	#11
	JSR	MVS5
	LDX	#19
	LDY	#13
	JSR	MVS5
MV8
	POLLBIT	127

	LDA	INWK+29
	AND	#128
	STA	RAT2
	LDA	INWK+29
	AND	#127
	BEQ	MV5
	CMP	#127
	SBC	#0
	ORA	RAT2
	STA	INWK+29
	LDX	#15
	LDY	#21
	JSR	MVS5
	LDX	#17
	LDY	#23
	JSR	MVS5
	LDX	#19
	LDY	#25
	JSR	MVS5
MV5
;	LDA	INWK+31
;	AND	#$A0
;	BNE	MVD1

	LDA	INWK+31
	ORA	#16
	STA	INWK+31
	JMP	SCAN

;MVD1	LDA	INWK+31
;	AND	#$EF
;	STA	INWK+31
;	RTS

MVT1m2	AND	#128

MVT1	; INWK,X=INWK,X+A,R

	ASL	A
	STA	S
	LDA	#0
	ROR	A
	STA	T
	LSR	S
	EOR	INWK+2,X
	BMI	MV10
	LDA	R
	ADC	INWK,X
	STA	INWK,X
	LDA	S
	ADC	INWK+1,X
	STA	INWK+1,X
	LDA	INWK+2,X
	ADC	#0
	ORA	T
	STA	INWK+2,X
	RTS

MV10	LDA	INWK,X
	SEC
	SBC	R
	STA	INWK,X
	LDA	INWK+1,X
	SBC	S
	STA	INWK+1,X
	LDA	INWK+2,X
	AND	#127
	SBC	#0
	ORA	#128
	EOR	T
	STA	INWK+2,X
	BCS	MV11
	LDA	#1
	SBC	INWK,X
	STA	INWK,X
	LDA	#0
	SBC	INWK+1,X
	STA	INWK+1,X
	LDA	#0
	SBC	INWK+2,X
	AND	#127
	ORA	T
	STA	INWK+2,X
MV11	RTS

MVS4	; Rotate vector INWK,Y due to player rotation
	POLLBIT	128
	LDA	ALPHA
	STA	Q
	LDX	INWK+2,Y
	STX	R
	LDX	INWK+3,Y
	STX	S
	LDX	INWK,Y
	STX	P
	LDA	INWK+1,Y
	EOR	#128
	JSR	MAD
	STA	INWK+3,Y
	STX	INWK+2,Y
	STX	P		;Y=Y-aX
	LDX	INWK,Y
	STX	R
	LDX	INWK+1,Y
	STX	S
	LDA	INWK+3,Y
	JSR	MAD
	STA	INWK+1,Y
	STX	INWK,Y
	STX	P		;X=X+aY

	POLLBIT	129

	LDA	BETA
	STA	Q
	LDX	INWK+2,Y
	STX	R
	LDX	INWK+3,Y
	STX	S
	LDX	INWK+4,Y
	STX	P
	LDA	INWK+5,Y
	EOR	#128
	JSR	MAD
	STA	INWK+3,Y
	STX	INWK+2,Y
	STX	P		;Y=Y-bZ

;	POLLBIT2	229

	LDX	INWK+4,Y
	STX	R
	LDX	INWK+5,Y
	STX	S
	LDA	INWK+3,Y
	JSR	MAD
	STA	INWK+5,Y
	STX	INWK+4,Y

	POLLBIT	130
	RTS			;Z=Z+bY

MVT6	TAY
	EOR	INWK+2,X
	BMI	MV50
	LDA	P+1
	CLC
	ADC	INWK,X
	STA	P+1
	LDA	P+2
	ADC	INWK+1,X
	STA	P+2
	TYA
	RTS

MV50	LDA	INWK,X
	SEC
	SBC	P+1
	STA	P+1
	LDA	INWK+1,X
	SBC	P+2
	STA	P+2
	BCC	MV51
	TYA
	EOR	#128
	RTS

MV51	LDA	#1
	SBC	P+1
	STA	P+1
	LDA	#0
	SBC	P+2
	STA	P+2
	TYA
	RTS

MV40	LDA	ALPHA
	EOR	#128
	STA	Q
	LDA	INWK
	STA	P
	LDA	INWK+1
	STA	P+1
	LDA	INWK+2
	JSR	MULT3
	LDX	#3
	JSR	MVT3;K=Y-aX
	LDA	K+1
	STA	K2+1
	STA	P
	LDA	K+2
	STA	K2+2
	STA	P+1
	LDA	BETA
	STA	Q
	LDA	K+3
	STA	K2+3
	JSR	MULT3
	LDX	#6
	JSR	MVT3
	LDA	K+1
	STA	P
	STA	INWK+6
	LDA	K+2
	STA	P+1
	STA	INWK+7
	LDA	K+3
	STA	INWK+8;Z=Z+bK2
	EOR	#128
	JSR	MULT3
	LDA	K+3
	AND	#128
	STA	T
	EOR	K2+3
	BMI	MV1
	LDA	K
	CLC
	ADC	K2
	LDA	K+1
	ADC	K2+1
	STA	INWK+3
	LDA	K+2
	ADC	K2+2
	STA	INWK+4
	LDA	K+3
	ADC	K2+3
	JMP	MV2

MV1	LDA	K
	SEC
	SBC	K2
	LDA	K+1
	SBC	K2+1
	STA	INWK+3
	LDA	K+2
	SBC	K2+2
	STA	INWK+4
	LDA	K2+3
	AND	#127
	STA	P
	LDA	K+3
	AND	#127
	SBC	P
	STA	P
	BCS	MV2
	LDA	#1
	SBC	INWK+3
	STA	INWK+3
	LDA	#0
	SBC	INWK+4
	STA	INWK+4
	LDA	#0
	SBC	P
	ORA	#128
MV2	EOR	T
	STA	INWK+5;Y=K2-bZ
	LDA	ALPHA
	STA	Q
	LDA	INWK+3
	STA	P
	LDA	INWK+4
	STA	P+1
	LDA	INWK+5
	JSR	MULT3
	LDX	#0
	JSR	MVT3
	LDA	K+1
	STA	INWK
	LDA	K+2
	STA	INWK+1
	LDA	K+3
	STA	INWK+2;X=X+aY
	JMP	MV45
;
;Checksum	SEC
;	LDY	#0
;	STY	V
;	LDX	#$10
;	LDA	(SC),Y;,,
;	TXA
;CHKLoop	 STX	V+1
;	STY	T
;	ADC	(V),Y
;	EOR	T
;	SBC	V+1
;	DEY
;	BNE	CHKLoop
;	INX
;	CPX	#$A0
;	BCC	CHKLoop
;	CMP	Spcent-1
;	BNE	Checksum
;	RTS
;
PLUT	LDX	VIEW
	BEQ	ANRTSPU2
PU1	DEX
	BNE	PU2
	LDA	INWK+2
	EOR	#128
	STA	INWK+2
	LDA	INWK+8
	EOR	#128
	STA	INWK+8
	LDA	INWK+10
	EOR	#128
	STA	INWK+10
	LDA	INWK+14
	EOR	#128
	STA	INWK+14
	LDA	INWK+16
	EOR	#128
	STA	INWK+16
	LDA	INWK+20
	EOR	#128
	STA	INWK+20
	LDA	INWK+22
	EOR	#128
	STA	INWK+22
	LDA	INWK+26
	EOR	#128
	STA	INWK+26
ANRTSPU2	RTS

PU2	;PU2-1 must=RTS
	LDA	#0
	CPX	#2
	ROR	A
	STA	RAT2
	EOR	#128
	STA	RAT
	LDA	INWK
	LDX	INWK+6
	STA	INWK+6
	STX	INWK
	LDA	INWK+1
	LDX	INWK+7
	STA	INWK+7
	STX	INWK+1
	LDA	INWK+2
	EOR	RAT
	TAX
	LDA	INWK+8
	EOR	RAT2
	STA	INWK+2
	STX	INWK+8
	LDY	#9
	JSR	PUS1
	LDY	#15
	JSR	PUS1
	LDY	#21
PUS1	LDA	INWK,Y
	LDX	INWK+4,Y
	STA	INWK+4,Y
	STX	INWK,Y
	LDA	INWK+1,Y
	EOR	RAT
	TAX
	LDA	INWK+5,Y
	EOR	RAT2
	STA	INWK+1,Y
	STX	INWK+5,Y
LO2	RTS
LQ	JSR	NWLOOKS
	JMP	NWSTARS

;	IF	FULL

LOOK1
	LDA	#0
	LDY	MODE
	BNE	LQ
	CPX	VIEW
	BEQ	LO2
	JSR	NWLOOKS2

	JSR	FLIP
	
	IF	NEEDPOLL
	JMP	WSCAN
	ELSE
	RTS
	ENDIF

FLIP	LDY	NOSTM
FLL1
	POLLBIT	100
	LDX	SY,Y
	LDA	SX,Y
	STA	SY,Y
	TXA
	STA	SX,Y
	LDA	SZ,Y
	STA	ZZ
	DEY
	BNE	FLL1
	RTS


NWLOOKS	; Space view with full screen clear
	LDA	#Yabs
	JSR	setYs

	STX	VIEW
	LDA	#0
	JSR	TT66
	JSR	COPYBANK
	JSR	SENDBOTH
	JMP	NWLOOKS3
	


NWLOOKS2	; Space view from space view
	STX	VIEW
	LDA	#0
	JSR	TT66
	JSR	COPYBANK
	LDA	#4*(banner+nli)+basecell
	STA	cellmax
	STA	cellmax+1
	JSR	SENDSLOW



NWLOOKS3
	LDX	#NOST
	LDY	#4*starbase

!1	POLLBIT	244

	LDA	#$F0
	STA	ATTRIBUTES,Y

	LDA	#stardef
	STA	ATTRIBUTES+1,Y
	TXA
	LSR	A
	ROR	A
	ROR	A
	AND	#$E1
	STA	ATTRIBUTES+2,Y
	INY
	INY
	INY
	INY
	DEX
	BNE	!1

	;JSR WPSHPS

	JSR	WSCAN

	JSR	SIGHT


NWLOOKS4	LDA	#FF
	STA	stripenb

	LDA	#FRGCOL
	STA	COL1

	LDA	frchar
	STA	charmin

	IF	DIALSONTOP
	LDA	#(nli+banner)*4+basecell
	STA	zermax
	STA	cellmax
	LDX	#4*(ditp+1+2)
	STX	cellmin
	LDX	#4*banner+basecell
	STX	cellminH

	ELSE

	LDA	#(nli+banner)*4+basecell
	STA	zermax
	LDX	#4*banner+basecell
	STX	cellmin
	LDA	#(nli+banner+dili+stripw)*4	; More of bank zero 
	STA	cellmax			; sent to do dial map
	ENDIF


	ENPOLLSC


	RTS

;	ENDIF	; (FULL)



	IF	SEETRIBS

TRIBTA	EQUB	0
	EQUB	1
	EQUB	2
	EQUB	3	
	EQUB	3	 
	EQUB	4	 
	EQUB	4	 
	EQUB	4
TRIBMA	EQUB	0
	EQUB	8
	EQUB	$18
	EQUB	$38
	EQUB	$78
	EQUB	$F8
	EQUB	$F8

	ENDIF



